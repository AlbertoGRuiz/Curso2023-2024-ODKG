[
  {
    "op": "core/column-removal",
    "columnName": "uuid",
    "description": "Remove column uuid"
  },
  {
    "op": "core/column-removal",
    "columnName": "kreis_name",
    "description": "Remove column kreis_name"
  },
  {
    "op": "core/column-removal",
    "columnName": "kreis_schluessel",
    "description": "Remove column kreis_schluessel"
  },
  {
    "op": "core/column-removal",
    "columnName": "gemeindeverband_name",
    "description": "Remove column gemeindeverband_name"
  },
  {
    "op": "core/column-removal",
    "columnName": "gemeindeverband_schluessel",
    "description": "Remove column gemeindeverband_schluessel"
  },
  {
    "op": "core/column-removal",
    "columnName": "gemeinde_schluessel",
    "description": "Remove column gemeinde_schluessel"
  },
  {
    "op": "core/column-removal",
    "columnName": "gemeindeteil_schluessel",
    "description": "Remove column gemeindeteil_schluessel"
  },
  {
    "op": "core/column-removal",
    "columnName": "strasse_schluessel",
    "description": "Remove column strasse_schluessel"
  },
  {
    "op": "core/column-removal",
    "columnName": "verbund",
    "description": "Remove column verbund"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "gemeinde_name",
    "newColumnName": "community_name",
    "description": "Rename column gemeinde_name to community_name"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "gemeindeteil_name",
    "newColumnName": "community_part_name",
    "description": "Rename column gemeindeteil_name to community_part_name"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "strasse_name",
    "newColumnName": "street_name",
    "description": "Rename column strasse_name to street_name"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "hausnummer",
    "newColumnName": "house_number",
    "description": "Rename column hausnummer to house_number"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "hausnummer_zusatz",
    "newColumnName": "house_number_addition",
    "description": "Rename column hausnummer_zusatz to house_number_addition"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "postleitzahl",
    "newColumnName": "postal_code",
    "description": "Rename column postleitzahl to postal_code"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "bezeichnung",
    "newColumnName": "designation",
    "description": "Rename column bezeichnung to designation"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "betreiber",
    "newColumnName": "operator",
    "description": "Rename column betreiber to operator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "betriebsart",
    "newColumnName": "operating_mode",
    "description": "Rename column betriebsart to operating_mode"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "arten_ladepunkte",
    "newColumnName": "number_charging_points",
    "description": "Rename column arten_ladepunkte to number_charging_points"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ladekarten",
    "newColumnName": "charging_cards",
    "description": "Rename column ladekarten to charging_cards"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "kosten",
    "newColumnName": "costs",
    "description": "Rename column kosten to costs"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "oeffnungszeiten",
    "newColumnName": "opening_hours",
    "description": "Rename column oeffnungszeiten to opening_hours"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column street_name using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "community_part_name",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column community_part_name using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "community_name",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column community_name using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "designation",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column designation using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operator using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "postal_code",
    "expression": "value.replace(/Ã¶/,\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column postal_code using expression value.replace(/Ã¶/,\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "designation",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column designation using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operating_mode",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operating_mode using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "number_charging_points",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column number_charging_points using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "charging_cards",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column charging_cards using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "charging_cards",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column charging_cards using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value.replace(\"Ã¶\",\"ö\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column costs using expression value.replace(\"Ã¶\",\"ö\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "community_name",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column community_name using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "community_part_name",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column community_part_name using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column street_name using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "designation",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column designation using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operator using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operator using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "charging_cards",
    "expression": "value.replace(\"Ã¤\",\"ä\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column charging_cards using expression value.replace(\"Ã¤\",\"ä\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "community_part_name",
    "expression": "value.replace(\"Ã¼\",\"ü\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column community_part_name using expression value.replace(\"Ã¼\",\"ü\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "expression": "value.replace(\"Ã¼\",\"ü\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column street_name using expression value.replace(\"Ã¼\",\"ü\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "designation",
    "expression": "value.replace(\"Ã¼\",\"ü\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column designation using expression value.replace(\"Ã¼\",\"ü\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value.replace(\"Ã¼\",\"ü\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column costs using expression value.replace(\"Ã¼\",\"ü\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value.replace(\"â‚¬\",\"€\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column costs using expression value.replace(\"â‚¬\",\"€\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "expression": "value.replace(\"ÃŸ\",\"ß\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column street_name using expression value.replace(\"ÃŸ\",\"ß\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "expression": "value.replace(\"ß\",\"ss\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column street_name using expression value.replace(\"ß\",\"ss\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "designation",
    "expression": "value.replace(\"ÃŸ\",\"ss\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column designation using expression value.replace(\"ÃŸ\",\"ss\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "expression": "value.replace(\"ÃŸ\",\"ss\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operator using expression value.replace(\"ÃŸ\",\"ss\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "expression": "value.replace(\"Ã¼\",\"ü\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operator using expression value.replace(\"Ã¼\",\"ü\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "opening_hours",
    "expression": "grel:if(value == \"24/7\", \"Yes\", \"No\")",
    "onError": "keep-original",
    "newColumnName": "all_day_open",
    "columnInsertIndex": 16,
    "description": "Create column all_day_open at index 16 based on column opening_hours using expression grel:if(value == \"24/7\", \"Yes\", \"No\")"
  },
  {
    "op": "core/row-star",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "starred": true,
    "description": "Star rows"
  },
  {
    "op": "core/row-star",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "starred": false,
    "description": "Unstar rows"
  },
  {
    "op": "core/row-flag",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "flagged": true,
    "description": "Flag rows"
  },
  {
    "op": "core/row-flag",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "flagged": false,
    "description": "Unflag rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Parkplatz Kuhstrasse",
                "l": "Parkplatz Kuhstrasse"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Stadtperle-Rostock",
                "l": "Stadtperle-Rostock"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Strand-Hotel Hübner",
                "l": "Strand-Hotel Hübner"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Erich-Schlesinger-Str. 62a",
                "l": "Erich-Schlesinger-Str. 62a"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Trihotel",
                "l": "Trihotel"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Krüll",
                "l": "Krüll"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Elbotel",
                "l": "Elbotel"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "ZMVZ Warnemünde GmbH",
                "l": "ZMVZ Warnemünde GmbH"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Jacob Cement Baustoffe",
                "l": "Jacob Cement Baustoffe"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Campingplatz Baltic-Freizeit",
                "l": "Campingplatz Baltic-Freizeit"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "rostock apartment LIVING HOTEL",
                "l": "rostock apartment LIVING HOTEL"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "IKEA",
                "l": "IKEA"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "latitude",
          "expression": "value",
          "columnName": "latitude",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "54.107771",
                "l": "54.107771"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Trelleboger Str. 5",
                "l": "Trelleboger Str. 5"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "designation",
          "expression": "value",
          "columnName": "designation",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "Kurt-Dunkelmann-Str. 2",
                "l": "Kurt-Dunkelmann-Str. 2"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/row-removal",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "opening_hours",
          "expression": "value",
          "columnName": "opening_hours",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        },
        {
          "type": "list",
          "name": "costs",
          "expression": "value",
          "columnName": "costs",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [],
          "selectBlank": true,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "description": "Remove rows"
  },
  {
    "op": "core/column-removal",
    "columnName": "community_name",
    "description": "Remove column community_name"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "number_charging_points",
    "newColumnName": "a",
    "description": "Rename column number_charging_points to a"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "anzahl_ladepunkte",
    "newColumnName": "number_charging_points",
    "description": "Rename column anzahl_ladepunkte to number_charging_points"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "a",
    "newColumnName": "types_charging_points",
    "description": "Rename column a to types_charging_points"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operating_mode",
    "expression": "value.replace(\"öffentlich\",\"public\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operating_mode using expression value.replace(\"öffentlich\",\"public\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operating_mode",
    "expression": "value.replace(\"halbpublic\",\"semipublic\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operating_mode using expression value.replace(\"halbpublic\",\"semipublic\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operating_mode",
    "expression": "value",
    "edits": [
      {
        "from": [
          "privat"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "private"
      }
    ],
    "description": "Mass edit cells in column operating_mode"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value.replace(\"Grundgebühr\",\"Base\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column costs using expression value.replace(\"Grundgebühr\",\"Base\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value",
    "edits": [
      {
        "from": [
          "kostenlos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "free of charge"
      }
    ],
    "description": "Mass edit cells in column costs"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value",
    "edits": [
      {
        "from": [
          "kostenpflichtig"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "chargeable"
      }
    ],
    "description": "Mass edit cells in column costs"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "costs",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Parkgebühren"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parking charges"
      }
    ],
    "description": "Mass edit cells in column costs"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "all_day_open",
    "expression": "jython:if cell.value == \"Yes\":\n    return 1\nelif cell.value == \"No\":\n    return 0\nelse:\n    return None",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column all_day_open using expression jython:if cell.value == \"Yes\":\n    return 1\nelif cell.value == \"No\":\n    return 0\nelse:\n    return None"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "costs",
    "newColumnName": "cost",
    "description": "Rename column costs to cost"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "number_charging_points",
    "newColumnName": "num_charging_points",
    "description": "Rename column number_charging_points to num_charging_points"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "designation",
    "newColumnName": "ChargingStation",
    "description": "Rename column designation to ChargingStation"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "community_part_name",
    "newColumnName": "Municipality",
    "description": "Rename column community_part_name to Municipality"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Municipality",
    "newColumnName": "municipality",
    "description": "Rename column Municipality to municipality"
  },
  {
    "op": "core/column-removal",
    "columnName": "all_day_open",
    "description": "Remove column all_day_open"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "ChargingStation",
    "newColumnName": "charging_station_name",
    "description": "Rename column ChargingStation to charging_station_name"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "municipality",
    "expression": "grel:value.toLowercase().replace(\" / \", \"_\").replace(\" \", \"_\").replace(\"-\", \"_\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\"ü\", \"u\").replace(\"ß\", \"ss\").replace(\".\", \"\")",
    "onError": "set-to-blank",
    "newColumnName": "municipality_id",
    "columnInsertIndex": 3,
    "description": "Create column municipality_id at index 3 based on column municipality using expression grel:value.toLowercase().replace(\" / \", \"_\").replace(\" \", \"_\").replace(\"-\", \"_\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\"ü\", \"u\").replace(\"ß\", \"ss\").replace(\".\", \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "operator",
    "expression": "grel:value.toLowercase().replace(\" / \", \"_\").replace(\" \", \"_\").replace(\"-\", \"_\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\"ü\", \"u\").replace(\"ß\", \"ss\").replace(\".\", \"\")",
    "onError": "set-to-blank",
    "newColumnName": "operator_id",
    "columnInsertIndex": 10,
    "description": "Create column operator_id at index 10 based on column operator using expression grel:value.toLowercase().replace(\" / \", \"_\").replace(\" \", \"_\").replace(\"-\", \"_\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\"ü\", \"u\").replace(\"ß\", \"ss\").replace(\".\", \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "charging_station_name",
    "expression": "grel:value.toLowercase().replace(\" / \", \"_\").replace(\" \", \"_\").replace(\"-\", \"_\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\"ü\", \"u\").replace(\"ß\", \"ss\").replace(\".\", \"\")",
    "onError": "set-to-blank",
    "newColumnName": "charging_station_id",
    "columnInsertIndex": 9,
    "description": "Create column charging_station_id at index 9 based on column charging_station_name using expression grel:value.toLowercase().replace(\" / \", \"_\").replace(\" \", \"_\").replace(\"-\", \"_\").replace(\"ä\", \"a\").replace(\"ö\", \"o\").replace(\"ü\", \"u\").replace(\"ß\", \"ss\").replace(\".\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality_id",
    "expression": "value.replace(\"&\",\"and\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column municipality_id using expression value.replace(\"&\",\"and\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator_id",
    "expression": "value.replace(\"&\",\"and\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column operator_id using expression value.replace(\"&\",\"and\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "charging_station_id",
    "expression": "value.replace(\"&\",\"and\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column charging_station_id using expression value.replace(\"&\",\"and\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "types_charging_points",
    "expression": "grel:value.replace (\"2,3\", \"2.3\").replace (\"3,7\", \"3.7\").replace (\",\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column types_charging_points using expression grel:value.replace (\"2,3\", \"2.3\").replace (\"3,7\", \"3.7\").replace (\",\", \";\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "cost",
    "expression": "grel:value.replace (\"0,\", \"0.\").replace (\",\", \";\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column cost using expression grel:value.replace (\"0,\", \"0.\").replace (\",\", \";\")"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "config": {
      "mode": "standard-service",
      "service": "https://wikidata.reconci.link/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q253019",
        "name": "Ortsteil"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column municipality to type Q253019"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Südstadt",
    "judgment": "matched",
    "match": {
      "id": "Q2381518",
      "name": "Südstadt",
      "types": [
        "Q253019"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Südstadt (Q2381518) for cells containing \"Südstadt\" in column municipality"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Stadtmitte",
    "judgment": "matched",
    "match": {
      "id": "Q1124159",
      "name": "Stadtmitte",
      "types": [
        "Q253019",
        "Q676050"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Stadtmitte (Q1124159) for cells containing \"Stadtmitte\" in column municipality"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Lichtenhagen",
    "judgment": "matched",
    "match": {
      "id": "Q741012",
      "name": "Rostock-Lichtenhagen",
      "types": [
        "Q253019"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Rostock-Lichtenhagen (Q741012) for cells containing \"Lichtenhagen\" in column municipality"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Seebad Diedrichshagen",
    "judgment": "matched",
    "match": {
      "id": "Q638302",
      "name": "Diedrichshagen",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Diedrichshagen (Q638302) for cells containing \"Seebad Diedrichshagen\" in column municipality"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Seebad Hohe Düne",
    "judgment": "matched",
    "match": {
      "id": "Q1484905",
      "name": "Hohe Düne",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Hohe Düne (Q1484905) for cells containing \"Seebad Hohe Düne\" in column municipality"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Seebad Markgrafenheide",
    "judgment": "matched",
    "match": {
      "id": "Q1900690",
      "name": "Markgrafenheide",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Markgrafenheide (Q1900690) for cells containing \"Seebad Markgrafenheide\" in column municipality"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "municipality",
    "similarValue": "Dierkow-West",
    "judgment": "matched",
    "match": {
      "id": "Q15944749",
      "name": "Dierkow-West",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Dierkow-West (Q15944749) for cells containing \"Dierkow-West\" in column municipality"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "config": {
      "mode": "standard-service",
      "service": "https://wikidata.reconci.link/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q79007",
        "name": "street"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column street_name to type Q79007"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Lise-Meitner-Ring",
    "judgment": "matched",
    "match": {
      "id": "Q104164614",
      "name": "Lise-Meitner-Ring",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Lise-Meitner-Ring (Q104164614) for cells containing \"Lise-Meitner-Ring\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Parkstr.",
    "judgment": "matched",
    "match": {
      "id": "Q101194725",
      "name": "Parkstraße",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Parkstraße (Q101194725) for cells containing \"Parkstr.\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "August-Bebel-Str.",
    "judgment": "matched",
    "match": {
      "id": "Q104163643",
      "name": "August-Bebel-Straße",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item August-Bebel-Straße (Q104163643) for cells containing \"August-Bebel-Str.\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Neuer Markt",
    "judgment": "matched",
    "match": {
      "id": "Q1262508",
      "name": "Neuer Markt",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Neuer Markt (Q1262508) for cells containing \"Neuer Markt\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Steinstr.",
    "judgment": "matched",
    "match": {
      "id": "Q2341682",
      "name": "Steinstraße",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Steinstraße (Q2341682) for cells containing \"Steinstr.\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Pütterweg",
    "judgment": "matched",
    "match": {
      "id": "Q104164836",
      "name": "Pütterweg",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Pütterweg (Q104164836) for cells containing \"Pütterweg\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Fischerweg",
    "judgment": "matched",
    "match": {
      "id": "Q104164108",
      "name": "Fischerweg",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Fischerweg (Q104164108) for cells containing \"Fischerweg\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Südring",
    "judgment": "matched",
    "match": {
      "id": "Q62284363",
      "name": "Südring",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Südring (Q62284363) for cells containing \"Südring\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Am Yachthafen",
    "judgment": "matched",
    "match": {
      "id": "Q104163849",
      "name": "Am Yachthafen",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Am Yachthafen (Q104163849) for cells containing \"Am Yachthafen\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Heinrich-Heine-Str.",
    "judgment": "matched",
    "match": {
      "id": "Q104163681",
      "name": "Heinrich-Heine-Straße",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Heinrich-Heine-Straße (Q104163681) for cells containing \"Heinrich-Heine-Str.\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Kolumbusring",
    "judgment": "matched",
    "match": {
      "id": "Q104164534",
      "name": "Kolumbusring",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kolumbusring (Q104164534) for cells containing \"Kolumbusring\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Am Strande",
    "judgment": "matched",
    "match": {
      "id": "Q104163636",
      "name": "Am Strande",
      "types": [
        "Q79007"
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Am Strande (Q104163636) for cells containing \"Am Strande\" in column street_name"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "street_name",
    "similarValue": "Kirchenplatz",
    "judgment": "matched",
    "match": {
      "id": "Q104163687",
      "name": "Kirchenplatz",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kirchenplatz (Q104163687) for cells containing \"Kirchenplatz\" in column street_name"
  },
  {
    "op": "core/recon",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "municipality: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "municipality",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "matched",
                "l": "matched"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "config": {
      "mode": "standard-service",
      "service": "https://wikidata.reconci.link/en/api",
      "identifierSpace": "http://www.wikidata.org/entity/",
      "schemaSpace": "http://www.wikidata.org/prop/direct/",
      "type": {
        "id": "Q4830453",
        "name": "business"
      },
      "autoMatch": true,
      "columnDetails": [],
      "limit": 0
    },
    "description": "Reconcile cells in column operator to type Q4830453"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Shell EV Charging Solutions Germany GmbH",
    "judgment": "matched",
    "match": {
      "id": "Q154950",
      "name": "Shell",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Shell (Q154950) for cells containing \"Shell EV Charging Solutions Germany GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Allego GmbH",
    "judgment": "matched",
    "match": {
      "id": "Q75560554",
      "name": "Allego",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Allego (Q75560554) for cells containing \"Allego GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "EnBW Energie Baden-Württemberg AG",
    "judgment": "matched",
    "match": {
      "id": "Q644304",
      "name": "EnBW",
      "types": [
        "Q4830453",
        "Q891723"
      ],
      "score": 95
    },
    "shareNewTopics": false,
    "description": "Match item EnBW (Q644304) for cells containing \"EnBW Energie Baden-Württemberg AG\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "EDEKA Foodservice Handelshof Management GmbH",
    "judgment": "matched",
    "match": {
      "id": "Q701755",
      "name": "Edeka",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Edeka (Q701755) for cells containing \"EDEKA Foodservice Handelshof Management GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Lidl Vertriebs-GmbH & Co. KG",
    "judgment": "matched",
    "match": {
      "id": "Q151954",
      "name": "Lidl",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Lidl (Q151954) for cells containing \"Lidl Vertriebs-GmbH & Co. KG\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Vienna House Hotelmanagement GmbH",
    "judgment": "matched",
    "match": {
      "id": "Q2523363",
      "name": "Vienna House",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Vienna House (Q2523363) for cells containing \"Vienna House Hotelmanagement GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Hotel NEPTUN Betriebsgesellschaft mbH",
    "judgment": "matched",
    "match": {
      "id": "Q874013",
      "name": "Hotel Neptun",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Hotel Neptun (Q874013) for cells containing \"Hotel NEPTUN Betriebsgesellschaft mbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Volkswagen Group Charging GmbH",
    "judgment": "matched",
    "match": {
      "id": "Q156578",
      "name": "Volkswagen Group",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Volkswagen Group (Q156578) for cells containing \"Volkswagen Group Charging GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Kaufland Stiftung GmbH & Co. KG",
    "judgment": "matched",
    "match": {
      "id": "Q685967",
      "name": "Kaufland",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Kaufland (Q685967) for cells containing \"Kaufland Stiftung GmbH & Co. KG\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Wohnen in Rostock Wohnungsgesellschaft mbH",
    "judgment": "matched",
    "match": {
      "id": "Q59587711",
      "name": "WIRO Wohnen in Rostock",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item WIRO Wohnen in Rostock (Q59587711) for cells containing \"Wohnen in Rostock Wohnungsgesellschaft mbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Industrie- und Handelskammer zu Rostock",
    "judgment": "matched",
    "match": {
      "id": "Q81804571",
      "name": "Industrie- und Handelskammer zu Rostock",
      "types": [
        ""
      ],
      "score": 100
    },
    "shareNewTopics": false,
    "description": "Match item Industrie- und Handelskammer zu Rostock (Q81804571) for cells containing \"Industrie- und Handelskammer zu Rostock\" in column operator"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "municipality",
    "expression": "grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "municipality_uri",
    "columnInsertIndex": 3,
    "description": "Create column municipality_uri at index 3 based on column municipality using expression grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "street_name",
    "expression": "grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "street_name_uri",
    "columnInsertIndex": 5,
    "description": "Create column street_name_uri at index 5 based on column street_name using expression grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "operator",
    "expression": "grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id",
    "onError": "set-to-blank",
    "newColumnName": "operator_uri",
    "columnInsertIndex": 11,
    "description": "Create column operator_uri at index 11 based on column operator using expression grel:\"https://www.wikidata.org/wiki/\"+cell.recon.match.id"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "team energie GmbH & Co. KG",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"team energie GmbH & Co. KG\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Parkhaus Gesellschaft Rostock GmbH",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"Parkhaus Gesellschaft Rostock GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Wohnungsgenossenschaft WARNOW Rostock-Warnemünde eG",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"Wohnungsgenossenschaft WARNOW Rostock-Warnemünde eG\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Yachthafenresidenz Hohe Düne GmbH",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"Yachthafenresidenz Hohe Düne GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "ICA Chipkartensysteme GmbH&Co KG",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"ICA Chipkartensysteme GmbH&Co KG\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Hotel Ostseeland",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"Hotel Ostseeland\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "Autohaus Rostock Ost GmbH",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"Autohaus Rostock Ost GmbH\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "HTL Haus-Elektrotechnik Lehmkuhl",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"HTL Haus-Elektrotechnik Lehmkuhl\" in column operator"
  },
  {
    "op": "core/recon-judge-similar-cells",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "operator: judgment",
          "expression": "forNonBlank(cell.recon.judgment, v, v, if(isNonBlank(value), \"(unreconciled)\", \"(blank)\"))",
          "columnName": "operator",
          "invert": false,
          "omitBlank": false,
          "omitError": false,
          "selection": [
            {
              "v": {
                "v": "none",
                "l": "none"
              }
            }
          ],
          "selectBlank": false,
          "selectError": false
        }
      ],
      "mode": "row-based"
    },
    "columnName": "operator",
    "similarValue": "TankE GmbH",
    "judgment": "new",
    "shareNewTopics": true,
    "description": "Mark to create one single new item for all cells containing \"TankE GmbH\" in column operator"
  }
]