# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13sPo5zJulLCpOxLVmy3Qjb_0W4bYNxce

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
from rdflib.plugins.sparql import prepareQuery
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

q1 = prepareQuery('''
    select ?s ?p ?v
    where {
        ?s ?p ?v.
    }''',
)

for r in g1.query(q1):
 print(r)

from rdflib.namespace import OWL, RDF
from urllib.parse import quote

vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
three = Namespace("http://data.three.org#")
owl = Namespace("http://www.w3.org/2002/07/owl#")

for i1 in g1.subjects(RDF.type, None):
    n1 = g1.value(i1, vcard.Given)
    f1 = g1.value(i1, vcard.Family)

    for i2 in g2.subjects(RDF.type, None):
        n2 = g2.value(i2, vcard.Given)
        f2 = g2.value(i2, vcard.Family)

        if n1 == n2 and f1 == f2:
            g3.add((i1,owl.sameAs,i2))


# Print the RDF graph (g3) with OWL:sameAs links
print(g3.serialize(format="ttl"))