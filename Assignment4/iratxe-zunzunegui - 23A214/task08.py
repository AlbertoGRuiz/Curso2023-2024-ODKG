# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gntakylHEmU2rgjPgntyfOMVXT_cJRO6

**Task 08: Completing missing data**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

# Graph 1 before adding elements from graph 2
from rdflib.namespace import RDF, RDFS
NS = Namespace("http://data.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
FOAF = Namespace("http://xmlns.com/foaf/0.1/")
print("Graph 1 before:")
for s, p, o in g1.triples((None, RDF.type, NS.Person)):
    for s1, p1, o1 in g1.triples((s, None, None)):
        print(s1, p1, o1)

from rdflib.plugins.sparql import prepareQuery

# Find elements of Person class
q1 = prepareQuery('''
  SELECT ?s WHERE {
    ?s rdf:type ?class.
    ?class rdfs:subClassOf* ns:Person
  }
  ''', initNs = {"ns":NS, "rdfs":RDFS}
)

for r in g1.query(q1): #find elements of Person class in graph 1
  # Iterate the properties we are looking for
  properties=[VCARD.Given, VCARD.Family, FOAF.EMAIL]
  for prop in properties:
  # Find if  property is missing in graph 1
    prop_g1 = g1.value(subject=r.s, predicate=prop, object=None)
    # If property is missing, look if it is in graph 2
    if prop_g1 == None:
      prop_g2 = g2.value(subject=r.s, predicate=prop, object=None)
      # If property is in graph 2, add it to graph 1
      if prop_g2 != None:
        g1.add((r.s, prop, prop_g2))

# Graph 1 after adding elements from graph 2
print("Graph 1 after:")
for s, p, o in g1.triples((None, RDF.type, NS.Person)):
    for s1, p1, o1 in g1.triples((s, None, None)):
        print(s1, p1, o1)