# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZSQCWELAm0rQMlosVbF8t_yoICI5kJ9h

**Task 09: Data linking**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
OWL = Namespace("http://www.w3.org/2002/07/owl#")

# We iterate through the subjects in g1 and g2 and we check if they have the same Given and Family name (different from None). If they do, we add them both to g3 through the property OWL:sameAs.
for s1, _, _ in g1:
  for s2, _, _ in g2:
    given_g1 = g1.value(s1, VCARD.Given, None)
    given_g2 = g2.value(s2, VCARD.Given, None)
    family_g1 = g1.value(s1, VCARD.Family, None)
    family_g2 = g2.value(s2, VCARD.Family, None)

    if (given_g1 is not None and given_g2 is not None and
        family_g1 is not None and family_g2 is not None and
        given_g1 == given_g2 and family_g1 == family_g2):
          g3.add((s1, OWL.sameAs, s2))

#We check the results in g3.
for s, p, o in g3:
  print(s,p,o)